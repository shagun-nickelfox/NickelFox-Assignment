// Generated by view binder compiler. Do not edit!
package com.example.nickelfoxassignment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nickelfoxassignment.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityButtonsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cvAnimation;

  @NonNull
  public final CardView cvCalculator;

  @NonNull
  public final CardView cvFormSubmission;

  @NonNull
  public final CardView cvGoogleMaps;

  @NonNull
  public final MyToolbarBinding toolbar;

  private ActivityButtonsBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cvAnimation,
      @NonNull CardView cvCalculator, @NonNull CardView cvFormSubmission,
      @NonNull CardView cvGoogleMaps, @NonNull MyToolbarBinding toolbar) {
    this.rootView = rootView;
    this.cvAnimation = cvAnimation;
    this.cvCalculator = cvCalculator;
    this.cvFormSubmission = cvFormSubmission;
    this.cvGoogleMaps = cvGoogleMaps;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityButtonsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityButtonsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_buttons, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityButtonsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cvAnimation;
      CardView cvAnimation = ViewBindings.findChildViewById(rootView, id);
      if (cvAnimation == null) {
        break missingId;
      }

      id = R.id.cvCalculator;
      CardView cvCalculator = ViewBindings.findChildViewById(rootView, id);
      if (cvCalculator == null) {
        break missingId;
      }

      id = R.id.cvFormSubmission;
      CardView cvFormSubmission = ViewBindings.findChildViewById(rootView, id);
      if (cvFormSubmission == null) {
        break missingId;
      }

      id = R.id.cvGoogleMaps;
      CardView cvGoogleMaps = ViewBindings.findChildViewById(rootView, id);
      if (cvGoogleMaps == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      MyToolbarBinding binding_toolbar = MyToolbarBinding.bind(toolbar);

      return new ActivityButtonsBinding((ConstraintLayout) rootView, cvAnimation, cvCalculator,
          cvFormSubmission, cvGoogleMaps, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
