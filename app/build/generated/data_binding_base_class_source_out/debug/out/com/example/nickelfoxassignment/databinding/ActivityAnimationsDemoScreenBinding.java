// Generated by view binder compiler. Do not edit!
package com.example.nickelfoxassignment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nickelfoxassignment.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAnimationsDemoScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBlink;

  @NonNull
  public final Button btnFade;

  @NonNull
  public final Button btnMove;

  @NonNull
  public final Button btnRotation;

  @NonNull
  public final Button btnSlide;

  @NonNull
  public final Button btnZoom;

  @NonNull
  public final ImageView ivBartImage;

  @NonNull
  public final MyToolbarBinding toolbar;

  private ActivityAnimationsDemoScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnBlink, @NonNull Button btnFade, @NonNull Button btnMove,
      @NonNull Button btnRotation, @NonNull Button btnSlide, @NonNull Button btnZoom,
      @NonNull ImageView ivBartImage, @NonNull MyToolbarBinding toolbar) {
    this.rootView = rootView;
    this.btnBlink = btnBlink;
    this.btnFade = btnFade;
    this.btnMove = btnMove;
    this.btnRotation = btnRotation;
    this.btnSlide = btnSlide;
    this.btnZoom = btnZoom;
    this.ivBartImage = ivBartImage;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAnimationsDemoScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAnimationsDemoScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_animations_demo_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAnimationsDemoScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBlink;
      Button btnBlink = ViewBindings.findChildViewById(rootView, id);
      if (btnBlink == null) {
        break missingId;
      }

      id = R.id.btnFade;
      Button btnFade = ViewBindings.findChildViewById(rootView, id);
      if (btnFade == null) {
        break missingId;
      }

      id = R.id.btnMove;
      Button btnMove = ViewBindings.findChildViewById(rootView, id);
      if (btnMove == null) {
        break missingId;
      }

      id = R.id.btnRotation;
      Button btnRotation = ViewBindings.findChildViewById(rootView, id);
      if (btnRotation == null) {
        break missingId;
      }

      id = R.id.btnSlide;
      Button btnSlide = ViewBindings.findChildViewById(rootView, id);
      if (btnSlide == null) {
        break missingId;
      }

      id = R.id.btnZoom;
      Button btnZoom = ViewBindings.findChildViewById(rootView, id);
      if (btnZoom == null) {
        break missingId;
      }

      id = R.id.ivBartImage;
      ImageView ivBartImage = ViewBindings.findChildViewById(rootView, id);
      if (ivBartImage == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      MyToolbarBinding binding_toolbar = MyToolbarBinding.bind(toolbar);

      return new ActivityAnimationsDemoScreenBinding((ConstraintLayout) rootView, btnBlink, btnFade,
          btnMove, btnRotation, btnSlide, btnZoom, ivBartImage, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
