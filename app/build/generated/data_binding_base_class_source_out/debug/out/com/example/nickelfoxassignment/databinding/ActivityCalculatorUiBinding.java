// Generated by view binder compiler. Do not edit!
package com.example.nickelfoxassignment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nickelfoxassignment.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCalculatorUiBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView ac;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View bar1;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View bar2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout clNumpad;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout clResult;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout clTrignometric;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView divide;

  @NonNull
  public final TextView equal;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final Guideline guideline;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout linear1;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout linear2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout linear3;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView multiply;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView percent;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView plus;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView plusminus;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final View rectangle2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final CardView rectangle4;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final CardView rectangle5;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView subtract;

  @NonNull
  public final TextView textView1;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView textView2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final MyToolbarBinding toolbar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvAC;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvCos;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvDivide;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvEqual;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvMultiply;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvPercent;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvPlus;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvPlusMinus;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvResult;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvSin;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvSubtract;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final TextView tvTan;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final View viewBar1;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final View viewBar2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout viewHideHorizontalBar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final View viewHistoryIcon;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout viewHorizontalBar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout viewVerticalBar;

  private ActivityCalculatorUiBinding(@NonNull View rootView, @Nullable TextView ac,
      @Nullable View bar1, @Nullable View bar2, @Nullable ConstraintLayout clNumpad,
      @Nullable ConstraintLayout clResult, @Nullable ConstraintLayout clTrignometric,
      @Nullable TextView divide, @NonNull TextView equal, @Nullable Guideline guideline,
      @Nullable LinearLayout linear1, @Nullable LinearLayout linear2,
      @Nullable LinearLayout linear3, @Nullable TextView multiply, @Nullable TextView percent,
      @Nullable TextView plus, @Nullable TextView plusminus, @Nullable View rectangle2,
      @Nullable CardView rectangle4, @Nullable CardView rectangle5, @Nullable TextView subtract,
      @NonNull TextView textView1, @Nullable TextView textView2, @Nullable MyToolbarBinding toolbar,
      @Nullable TextView tvAC, @Nullable TextView tvCos, @Nullable TextView tvDivide,
      @Nullable TextView tvEqual, @Nullable TextView tvMultiply, @Nullable TextView tvPercent,
      @Nullable TextView tvPlus, @Nullable TextView tvPlusMinus, @Nullable TextView tvResult,
      @Nullable TextView tvSin, @Nullable TextView tvSubtract, @Nullable TextView tvTan,
      @Nullable View viewBar1, @Nullable View viewBar2,
      @Nullable LinearLayout viewHideHorizontalBar, @Nullable View viewHistoryIcon,
      @Nullable LinearLayout viewHorizontalBar, @Nullable LinearLayout viewVerticalBar) {
    this.rootView = rootView;
    this.ac = ac;
    this.bar1 = bar1;
    this.bar2 = bar2;
    this.clNumpad = clNumpad;
    this.clResult = clResult;
    this.clTrignometric = clTrignometric;
    this.divide = divide;
    this.equal = equal;
    this.guideline = guideline;
    this.linear1 = linear1;
    this.linear2 = linear2;
    this.linear3 = linear3;
    this.multiply = multiply;
    this.percent = percent;
    this.plus = plus;
    this.plusminus = plusminus;
    this.rectangle2 = rectangle2;
    this.rectangle4 = rectangle4;
    this.rectangle5 = rectangle5;
    this.subtract = subtract;
    this.textView1 = textView1;
    this.textView2 = textView2;
    this.toolbar = toolbar;
    this.tvAC = tvAC;
    this.tvCos = tvCos;
    this.tvDivide = tvDivide;
    this.tvEqual = tvEqual;
    this.tvMultiply = tvMultiply;
    this.tvPercent = tvPercent;
    this.tvPlus = tvPlus;
    this.tvPlusMinus = tvPlusMinus;
    this.tvResult = tvResult;
    this.tvSin = tvSin;
    this.tvSubtract = tvSubtract;
    this.tvTan = tvTan;
    this.viewBar1 = viewBar1;
    this.viewBar2 = viewBar2;
    this.viewHideHorizontalBar = viewHideHorizontalBar;
    this.viewHistoryIcon = viewHistoryIcon;
    this.viewHorizontalBar = viewHorizontalBar;
    this.viewVerticalBar = viewVerticalBar;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCalculatorUiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCalculatorUiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_calculator_ui, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCalculatorUiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ac;
      TextView ac = ViewBindings.findChildViewById(rootView, id);

      id = R.id.bar_1;
      View bar1 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.bar_2;
      View bar2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.clNumpad;
      ConstraintLayout clNumpad = ViewBindings.findChildViewById(rootView, id);

      id = R.id.clResult;
      ConstraintLayout clResult = ViewBindings.findChildViewById(rootView, id);

      id = R.id.clTrignometric;
      ConstraintLayout clTrignometric = ViewBindings.findChildViewById(rootView, id);

      id = R.id.divide;
      TextView divide = ViewBindings.findChildViewById(rootView, id);

      id = R.id.equal;
      TextView equal = ViewBindings.findChildViewById(rootView, id);
      if (equal == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linear2;
      LinearLayout linear2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.linear3;
      LinearLayout linear3 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.multiply;
      TextView multiply = ViewBindings.findChildViewById(rootView, id);

      id = R.id.percent;
      TextView percent = ViewBindings.findChildViewById(rootView, id);

      id = R.id.plus;
      TextView plus = ViewBindings.findChildViewById(rootView, id);

      id = R.id.plusminus;
      TextView plusminus = ViewBindings.findChildViewById(rootView, id);

      id = R.id.rectangle_2;
      View rectangle2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.rectangle_4;
      CardView rectangle4 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.rectangle_5;
      CardView rectangle5 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.subtract;
      TextView subtract = ViewBindings.findChildViewById(rootView, id);

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      MyToolbarBinding binding_toolbar = toolbar != null
          ? MyToolbarBinding.bind(toolbar)
          : null;

      id = R.id.tvAC;
      TextView tvAC = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvCos;
      TextView tvCos = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvDivide;
      TextView tvDivide = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvEqual;
      TextView tvEqual = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvMultiply;
      TextView tvMultiply = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvPercent;
      TextView tvPercent = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvPlus;
      TextView tvPlus = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvPlusMinus;
      TextView tvPlusMinus = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvResult;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvSin;
      TextView tvSin = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvSubtract;
      TextView tvSubtract = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tvTan;
      TextView tvTan = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewBar1;
      View viewBar1 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewBar2;
      View viewBar2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewHideHorizontalBar;
      LinearLayout viewHideHorizontalBar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewHistoryIcon;
      View viewHistoryIcon = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewHorizontalBar;
      LinearLayout viewHorizontalBar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.viewVerticalBar;
      LinearLayout viewVerticalBar = ViewBindings.findChildViewById(rootView, id);

      return new ActivityCalculatorUiBinding(rootView, ac, bar1, bar2, clNumpad, clResult,
          clTrignometric, divide, equal, guideline, linear1, linear2, linear3, multiply, percent,
          plus, plusminus, rectangle2, rectangle4, rectangle5, subtract, textView1, textView2,
          binding_toolbar, tvAC, tvCos, tvDivide, tvEqual, tvMultiply, tvPercent, tvPlus,
          tvPlusMinus, tvResult, tvSin, tvSubtract, tvTan, viewBar1, viewBar2,
          viewHideHorizontalBar, viewHistoryIcon, viewHorizontalBar, viewVerticalBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
