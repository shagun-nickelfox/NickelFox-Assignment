// Generated by view binder compiler. Do not edit!
package com.example.nickelfoxassignment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nickelfoxassignment.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCalculatorUiBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView ac;

  @NonNull
  public final View bar1;

  @NonNull
  public final View bar2;

  @NonNull
  public final TextView divide;

  @NonNull
  public final TextView equal;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout linear1;

  @NonNull
  public final TextView multiply;

  @NonNull
  public final TextView percent;

  @NonNull
  public final TextView plus;

  @NonNull
  public final TextView plusminus;

  @NonNull
  public final View rectangle2;

  @NonNull
  public final CardView rectangle4;

  @NonNull
  public final CardView rectangle5;

  @NonNull
  public final TextView subtract;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-large-long-xhdpi/</li>
   * </ul>
   */
  @Nullable
  public final View vector;

  private ActivityCalculatorUiBinding(@NonNull ConstraintLayout rootView, @NonNull TextView ac,
      @NonNull View bar1, @NonNull View bar2, @NonNull TextView divide, @NonNull TextView equal,
      @Nullable LinearLayout linear1, @NonNull TextView multiply, @NonNull TextView percent,
      @NonNull TextView plus, @NonNull TextView plusminus, @NonNull View rectangle2,
      @NonNull CardView rectangle4, @NonNull CardView rectangle5, @NonNull TextView subtract,
      @NonNull TextView textView1, @NonNull TextView textView2, @Nullable View vector) {
    this.rootView = rootView;
    this.ac = ac;
    this.bar1 = bar1;
    this.bar2 = bar2;
    this.divide = divide;
    this.equal = equal;
    this.linear1 = linear1;
    this.multiply = multiply;
    this.percent = percent;
    this.plus = plus;
    this.plusminus = plusminus;
    this.rectangle2 = rectangle2;
    this.rectangle4 = rectangle4;
    this.rectangle5 = rectangle5;
    this.subtract = subtract;
    this.textView1 = textView1;
    this.textView2 = textView2;
    this.vector = vector;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCalculatorUiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCalculatorUiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_calculator_ui, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCalculatorUiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ac;
      TextView ac = ViewBindings.findChildViewById(rootView, id);
      if (ac == null) {
        break missingId;
      }

      id = R.id.bar_1;
      View bar1 = ViewBindings.findChildViewById(rootView, id);
      if (bar1 == null) {
        break missingId;
      }

      id = R.id.bar_2;
      View bar2 = ViewBindings.findChildViewById(rootView, id);
      if (bar2 == null) {
        break missingId;
      }

      id = R.id.divide;
      TextView divide = ViewBindings.findChildViewById(rootView, id);
      if (divide == null) {
        break missingId;
      }

      id = R.id.equal;
      TextView equal = ViewBindings.findChildViewById(rootView, id);
      if (equal == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.multiply;
      TextView multiply = ViewBindings.findChildViewById(rootView, id);
      if (multiply == null) {
        break missingId;
      }

      id = R.id.percent;
      TextView percent = ViewBindings.findChildViewById(rootView, id);
      if (percent == null) {
        break missingId;
      }

      id = R.id.plus;
      TextView plus = ViewBindings.findChildViewById(rootView, id);
      if (plus == null) {
        break missingId;
      }

      id = R.id.plusminus;
      TextView plusminus = ViewBindings.findChildViewById(rootView, id);
      if (plusminus == null) {
        break missingId;
      }

      id = R.id.rectangle_2;
      View rectangle2 = ViewBindings.findChildViewById(rootView, id);
      if (rectangle2 == null) {
        break missingId;
      }

      id = R.id.rectangle_4;
      CardView rectangle4 = ViewBindings.findChildViewById(rootView, id);
      if (rectangle4 == null) {
        break missingId;
      }

      id = R.id.rectangle_5;
      CardView rectangle5 = ViewBindings.findChildViewById(rootView, id);
      if (rectangle5 == null) {
        break missingId;
      }

      id = R.id.subtract;
      TextView subtract = ViewBindings.findChildViewById(rootView, id);
      if (subtract == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.vector;
      View vector = ViewBindings.findChildViewById(rootView, id);

      return new ActivityCalculatorUiBinding((ConstraintLayout) rootView, ac, bar1, bar2, divide,
          equal, linear1, multiply, percent, plus, plusminus, rectangle2, rectangle4, rectangle5,
          subtract, textView1, textView2, vector);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
